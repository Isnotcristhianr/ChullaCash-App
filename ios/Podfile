# Uncomment this line to define a global platform for your project
platform :ios, '15.0' # Actualizado de 13.0 a 14.0 para mejor compatibilidad

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true' # Deshabilita el envío de estadísticas de CocoaPods para mejorar la latencia.

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup # Configuración básica de CocoaPods para Flutter.

target 'Runner' do
  use_frameworks! # Habilita el uso de frameworks.
  use_modular_headers! # Habilita encabezados modulares.

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__)) # Instala todos los pods de Flutter.
  
  target 'RunnerTests' do
    inherit! :search_paths # Hereda rutas de búsqueda para los tests.
  end

end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    target.build_configurations.each do |config|
      # Configuraciones básicas mejoradas
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
      
      # Mejorar compatibilidad con módulos Swift
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # Configuración simplificada de FRAMEWORK_SEARCH_PATHS
      config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= [
        '$(inherited)',
        '$(PODS_ROOT)/**'
      ]
      
      # Limpiar flags problemáticos de manera más segura
      ['OTHER_CFLAGS', 'OTHER_CPLUSPLUSFLAGS'].each do |flag|
        flags = config.build_settings[flag]
        next unless flags
        
        if flags.is_a?(String)
          flags = flags.split(' ')
        end
        
        if flags.is_a?(Array)
          # Remover flags problemáticos específicos
          flags = flags.reject { |f| f == '-G' || f.include?('AudioToolbox') }
          config.build_settings[flag] = flags.empty? ? '$(inherited)' : flags
        end
      end
    end
  end
end
